"""create wearspace tabel

Revision ID: 294e4f48bbcd
Revises:
Create Date: 2025-05-27 20:39:23.791326

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# --- THIS IS THE CRUCIAL LINE YOU NEED TO ADD ---
from wearspace_app.models.meta import UUIDColumn
# -------------------------------------------------


# revision identifiers, used by Alembic.
revision = '294e4f48bbcd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_brands')),
    sa.UniqueConstraint('name', name=op.f('uq_brands_name'))
    )
    op.create_table('inspirations',
    sa.Column('id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('tag', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_inspirations'))
    )
    op.create_table('users',
    sa.Column('id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('products',
    sa.Column('id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('brand_id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('material', sa.String(length=100), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('stock', sa.Integer(), nullable=True),
    sa.Column('sizes', postgresql.ARRAY(sa.String(length=10)), nullable=True),
    sa.Column('colors', postgresql.ARRAY(sa.String(length=50)), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name=op.f('fk_products_brand_id_brands')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products'))
    )
    op.create_table('favorites',
    sa.Column('user_id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('product_id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_favorites_product_id_products')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_favorites_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'product_id', name=op.f('pk_favorites'))
    )
    op.create_table('transactions',
    sa.Column('id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('user_id', UUIDColumn(length=36), nullable=True), # Changed: directly use UUIDColumn
    sa.Column('product_id', UUIDColumn(length=36), nullable=False), # Changed: directly use UUIDColumn
    sa.Column('customer_name', sa.String(length=255), nullable=False),
    sa.Column('shipping_address', sa.Text(), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('transaction_status', sa.String(length=50), nullable=False),
    sa.Column('purchased_size', sa.String(length=10), nullable=False),
    sa.Column('purchased_color', sa.String(length=50), nullable=False),
    sa.Column('transaction_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_transactions_product_id_products')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_transactions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transactions'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('favorites')
    op.drop_table('products')
    op.drop_table('users')
    op.drop_table('inspirations')
    op.drop_table('brands')
    # ### end Alembic commands ###